if(ds["AgeUnit"] == "Month(s)")
{ds["AgeAtAdverseEventInYears"] = x/12}
else if (ds["AgeUnit"] == "Weeks(s)")
{ds["AgeAtAdverseEventInYears"] = x*7/365}
else if (ds["AgeUnit"] == "Day(s)")
{ds["AgeAtAdverseEventInYears"] = x*1/365}
else if (ds["AgeUnit"] == "Decade(s)")
{ds["AgeAtAdverseEventInYears"] = x*10}  }
return(ds)}
AdverseFoodEvents = AdverseFoodEvents %>%
mutate(AgeAtAdverseEventInYears = AgeAtAdverseEvent)
AdverseFoodEvents$AgeAtAdverseEventInYears =
as.numeric(AdverseFoodEvents$AgeAtAdverseEventInYears)
AdverseFoodEvents = sapply(AdverseFoodEvents,TransformIntoYears)
AdverseFoodEvents = as.data.frame(AdverseFoodEvents)
breaks = c(10,20,30,40,50,60,70,80,90,100)
AdverseFoodEvents %>%
filter(!is.na(AgeAtAdverseEventInYears)) %>%
group_by(AgeAtAdverseEventInYears) %>%
summarise(Count = n()) %>%
ungroup() %>%
mutate(AgeAtAdverseEventInYears = as.numeric(AgeAtAdverseEventInYears)) %>%
ggplot(aes(x = AgeAtAdverseEventInYears,y = Count)) +
geom_bar(stat='identity',colour="white") +
scale_x_continuous(limits = c(0, 100),breaks=breaks ) +
labs(x = 'Age in Years',
y = 'Count',
title = 'Age and Count') +
theme_bw()
TransformIntoYears = function(ds)
{if(!is.na(ds["AgeAtAdverseEvent"]))
{ x = as.numeric(ds["AgeAtAdverseEvent"])
ds["AgeAtAdverseEvent"] = as.numeric(ds["AgeAtAdverseEvent"])
if(ds["AgeUnit"] == "Month(s)")
{ds["AgeAtAdverseEventInYears"] = x/12}
else if (ds["AgeUnit"] == "Weeks(s)")
{ds["AgeAtAdverseEventInYears"] = x*7/365}
else if (ds["AgeUnit"] == "Day(s)")
{ds["AgeAtAdverseEventInYears"] = x*1/365}
else if (ds["AgeUnit"] == "Decade(s)")
{ds["AgeAtAdverseEventInYears"] = x*10}  }
return(ds)}
AdverseFoodEvents = AdverseFoodEvents %>%
mutate(AgeAtAdverseEventInYears = AgeAtAdverseEvent)
AdverseFoodEvents$AgeAtAdverseEventInYears =
as.numeric(AdverseFoodEvents$AgeAtAdverseEventInYears)
AdverseFoodEvents = sapply(AdverseFoodEvents,TransformIntoYears)
AdverseFoodEvents = as.data.frame(AdverseFoodEvents)
breaks = c(10,20,30,40,50,60,70,80,90,100)
AdverseFoodEvents %>%
filter(!is.na(AgeAtAdverseEventInYears)) %>%
group_by(AgeAtAdverseEventInYears) %>%
summarise(Count = n()) %>%
ungroup() %>%
mutate(AgeAtAdverseEventInYears = as.numeric(AgeAtAdverseEventInYears)) %>%
ggplot(aes(x = AgeAtAdverseEventInYears,y = Count)) +
geom_bar(stat='identity',colour="white", fill = "green") +
scale_x_continuous(limits = c(0, 100),breaks=breaks ) +
labs(x = 'Age in Years',
y = 'Count',
title = 'Age and Count') +
theme_bw()
TransformIntoYears = function(ds)
{if(!is.na(ds["AgeAtAdverseEvent"]))
{ x = as.numeric(ds["AgeAtAdverseEvent"])
ds["AgeAtAdverseEvent"] = as.numeric(ds["AgeAtAdverseEvent"])
if(ds["AgeUnit"] == "Month(s)")
{ds["AgeAtAdverseEventInYears"] = x/12}
else if (ds["AgeUnit"] == "Weeks(s)")
{ds["AgeAtAdverseEventInYears"] = x*7/365}
else if (ds["AgeUnit"] == "Day(s)")
{ds["AgeAtAdverseEventInYears"] = x*1/365}
else if (ds["AgeUnit"] == "Decade(s)")
{ds["AgeAtAdverseEventInYears"] = x*10}  }
return(ds)}
AdverseFoodEvents = AdverseFoodEvents %>%
mutate(AgeAtAdverseEventInYears = AgeAtAdverseEvent)
AdverseFoodEvents$AgeAtAdverseEventInYears =
as.numeric(AdverseFoodEvents$AgeAtAdverseEventInYears)
AdverseFoodEvents = sapply(AdverseFoodEvents,TransformIntoYears)
AdverseFoodEvents = as.data.frame(AdverseFoodEvents)
breaks = c(10,20,30,40,50,60,70,80,90,100)
AdverseFoodEvents %>%
filter(!is.na(AgeAtAdverseEventInYears)) %>%
group_by(AgeAtAdverseEventInYears) %>%
summarise(Count = n()) %>%
ungroup() %>%
mutate(AgeAtAdverseEventInYears = as.numeric(AgeAtAdverseEventInYears)) %>%
ggplot(aes(x = AgeAtAdverseEventInYears,y = Count)) +
geom_bar(stat='identity',colour="white", fill = "darkgreen") +
scale_x_continuous(limits = c(0, 100),breaks=breaks ) +
labs(x = 'Age in Years',
y = 'Count',
title = 'Age and Count') +
theme_bw()
knitr::opts_chunk$set(echo = TRUE)
ggplot(sleep, aes(x = extra)) + geom_histogram()
ggplot(sleep, aes(x = extra)) + geom_histogram()
qplot(extra, data = sleep, fill = group)
library(ggplot2)
ggplot(sleep, aes(x = group , y = extra, color = ID)) + geom_point()
library(ggplot2)
s1 <- sleep[1:10, 1:3]
ggplot(s1, aes(x = ID , y = extra)) + geom_col(fill = "pink", color = "black")
s2 <- sleep[11:20, 1:3]
ggplot(s2, aes(x = ID , y = extra)) + geom_col(fill = "indianred", color = "black")
library(ggplot2)
ggplot(sleep, aes(x = group, y = extra)) + geom_boxplot()
library(ggplot2)
ggplot(sleep, aes(x = group)) +
geom_bar(fill = "lightblue", colour = "black")
ggmap(map_4, darken = c(0.5, "white")) +
geom_point(aes(x = lon, y = lat, size = "?I?\?ƕ?"), data = bs)
ggmap(map_4, darken = c(0.5, "white")) +
geom_point(aes(x = lon, y = lat), data = bs)
library(readr)
bs <- read_csv("book.csv")
lon.deg <- sapply((strsplit(as.character(bs$"經度"), ",")), as.numeric)
lat.deg <- sapply((strsplit(as.character(bs$"緯度"), ",")), as.numeric)
bs$lat <- lat.deg
bs$lon <- lon.deg
library(ggmap)
map_4 <- get_map(location = c(lon = 120.5, lat = 23.625), zoom = 8)
ggmap(map_4) + geom_point(aes(x = lon, y = lat), data = bs)
library(readr)
bs <- read_csv("book.csv")
lon.deg <- sapply((strsplit(as.character(bs$"經度"), ",")), as.numeric)
lat.deg <- sapply((strsplit(as.character(bs$"緯度"), ",")), as.numeric)
bs$lat <- lat.deg
bs$lon <- lon.deg
library(ggmap)
map_4 <- get_map(location = c(lon = 120.5, lat = 23.625), zoom = 8)
ggmap(map_4) + geom_point(aes(x = lon, y = lat), data = bs)
ggmap(map_4, darken = c(0.5, "white")) +
geom_point(aes(x = lon, y = lat), data = bs)
library(readr)
bs <- read_csv("book.csv")
lon.deg <- sapply((strsplit(as.character(bs$"經度"), ",")), as.numeric)
lat.deg <- sapply((strsplit(as.character(bs$"緯度"), ",")), as.numeric)
bs$lat <- lat.deg
bs$lon <- lon.deg
library(ggmap)
map_5 <- get_map(location = c(lon = 121.576957, lat = 25.028702), zoom = 15)
ggmap(map_5) + geom_point(aes(x = lon, y = lat), data = bs)
library(readr)
bs <- read_csv("book.csv")
lon.deg <- sapply((strsplit(as.character(bs$"經度"), ",")), as.numeric)
lat.deg <- sapply((strsplit(as.character(bs$"緯度"), ",")), as.numeric)
bs$lat <- lat.deg
bs$lon <- lon.deg
library(ggmap)
map_6 <- get_map(location = c(lon = 121.519872, lat =25.042141), zoom = 13)
ggmap(map_6) + geom_point(aes(x = lon, y = lat), data = bs)
library(ggplot2)
data.frame("park")
ggplot(data= park, aes(x = type)) +
geom_bar(fill = "orange", colour = "black")
library(ggplot2)
data.frame("park")
ggplot(data= park, aes(x = type)) +
geom_bar(fill = "orange", colour = "black")
library(ggplot2)
ggplot(park, aes(x= type, y= area)) + geom_boxplot()
library(ggmap)
library(mapproj)
map_1 <- get_map(location = 'Swiss', zoom = 7, language = "zh-TW")
ggmap(map_1)
library(ggmap)
library(mapproj)
map <- get_map(location = c(lon = 7.44744, lat = 46.94809),
zoom = 10, language = "zh-TW")
ggmap(map)
library(ggmap)
library(mapproj)
map <- get_map(location = c(lon = 7.44744, lat = 46.94809),
zoom = 10, language = "zh-TW", maptype = "roadmap")
ggmap(map)
library(ggmap)
library(mapproj)
map <- get_map(location = c(lon = 7.44744, lat = 46.94809),
zoom = 15, language = "zh-TW", maptype = "roadmap")
ggmap(map)
library(ggmap)
library(mapproj)
map <- get_map(location = c(lon = 7.44744, lat = 46.94809),
zoom = 15, language = "zh-TW", maptype = "satellite")
ggmap(map)
library(ggmap)
library(mapproj)
map <- get_map(location = c(lon = 7.44744, lat = 46.94809),
zoom = 15, language = "zh-TW", maptype = "hybrid")
ggmap(map)
library(ggmap)
library(mapproj)
map <- get_map(location = c(lon = 7.44744, lat = 46.94809),
zoom = 15, language = "zh-TW", maptype = "toner-lite")
library(ggmap)
library(mapproj)
map <- get_map(location = c(lon = 7.44744, lat = 46.94809),
zoom = 15, language = "zh-TW", maptype = "toner-lite")
ggmap(map)
map <- get_map(location = c(lon = 7.44744, lat = 46.94809),
zoom = 20, language = "zh-TW")
ggmap(map, darken = c(0.5, "white"))
map <- get_map(location = c(lon = 7.44744, lat = 46.94809),
zoom = 10, language = "zh-TW")
ggmap(map, darken = 0.5)
library(readr)
bs <- read_csv("book.csv")
lon.deg <- sapply((strsplit(as.character(bs$"經度"), ",")), as.numeric)
lat.deg <- sapply((strsplit(as.character(bs$"緯度"), ",")), as.numeric)
bs$lat <- lat.deg
bs$lon <- lon.deg
library(ggmap)
map_4 <- get_map(location = c(lon = 120.5, lat = 23.625), zoom = 8)
ggmap(map_4) + geom_point(aes(x = lon, y = lat), data = bs)
keywordSymptom="DIARRHOEA"
SymptomPlots(keywordSymptom,fillColor2)
AdverseFoodEvents %>%
mutate(AgeAtAdverseEventInYears = as.integer(AgeAtAdverseEventInYears)) %>%
filter(AgeAtAdverseEventInYears >=70) %>%
filter(ProductName != "REDACTED") %>%
PlotProducts(fillColorName = fillColor)
AdverseFoodEvents %>%
mutate(AgeAtAdverseEventInYears = as.integer(AgeAtAdverseEventInYears)) %>%
filter(AgeAtAdverseEventInYears >=70) %>%
filter(ProductName != "REDACTED") %>%
PlotProducts(fillColorName = "purple")
PlotProducts = function(ds,fillColorName)
{
ds %>%
group_by(ProductName) %>%
summarise(Count = n()) %>%
arrange(desc(Count)) %>%
ungroup() %>%
mutate(ProductName = reorder(ProductName,Count)) %>%
head(10) %>%
ggplot(aes(x = ProductName,y = Count)) +
geom_bar(stat='identity',colour="white", fill = c(fillColorName)) +
geom_text(aes(x = ProductName, y = 1, label = paste0("(",Count,")",sep="")),
hjust=0, vjust=.5, size = 4, colour = 'black',
fontface = 'bold') +
labs(x = 'Products',
y = 'Count',
title = 'Products') +
coord_flip() +
theme_bw()
}
PlotProducts = function(ds,fillColorName)
{
ds %>%
group_by(ProductName) %>%
summarise(Count = n()) %>%
arrange(desc(Count)) %>%
ungroup() %>%
mutate(ProductName = reorder(ProductName,Count)) %>%
head(10) %>%
ggplot(aes(x = ProductName,y = Count)) +
geom_bar(stat='identity',colour="white", fill = c(fillColorName)) +
geom_text(aes(x = ProductName, y = 1, label = paste0("(",Count,")",sep="")),
hjust=0, vjust=.5, size = 4, colour = 'black',
fontface = 'bold') +
labs(x = 'Products',
y = 'Count',
title = 'Products') +
coord_flip() +
theme_bw()
}
mutate(AgeAtAdverseEventInYears = as.integer(AgeAtAdverseEventInYears)) %>%
filter(AgeAtAdverseEventInYears >=70) %>%
filter(ProductName != "REDACTED") %>%
PlotProducts(fillColorName = fillColor)
keywordSymptom="DIARRHOEA"
SymptomPlots(keywordSymptom,fillColor2)
old <- data_frame(adversefoodevents$AgeAtAdverseEvent) %>%
AdverseFoodEvents = AdverseFoodEvents %>%
rename(ReportNo = `RA_Report #`) %>%
rename(CreatedDate = `RA_CAERS Created Date`) %>%
rename(StartDate = `AEC_Event Start Date`) %>%
rename(ProductRole = `PRI_Product Role`) %>%
rename(ProductName = `PRI_Reported Brand/Product Name`) %>%
rename(IndustryName = `PRI_FDA Industry Name`) %>%
rename(AgeUnit = `CI_Age Unit`) %>%
rename(AgeAtAdverseEvent = `CI_Age at Adverse Event`) %>%
rename(Gender = `CI_Gender`) %>%
rename(Outcomes = `AEC_One Row Outcomes`) %>%
rename(Symptoms = `SYM_One Row Coded Symptoms`)
AdverseFoodEvents = AdverseFoodEvents %>%
rename(ReportNo = `RA_Report #`) %>%
rename(CreatedDate = `RA_CAERS Created Date`) %>%
rename(StartDate = `AEC_Event Start Date`) %>%
rename(ProductRole = `PRI_Product Role`) %>%
rename(ProductName = `PRI_Reported Brand/Product Name`) %>%
rename(IndustryName = `PRI_FDA Industry Name`) %>%
rename(AgeUnit = `CI_Age Unit`) %>%
rename(AgeAtAdverseEvent = `CI_Age at Adverse Event`) %>%
rename(Gender = `CI_Gender`) %>%
rename(Outcomes = `AEC_One Row Outcomes`) %>%
rename(Symptoms = `SYM_One Row Coded Symptoms`)
filter(AgeAtAdverseEvent > 65)
library(tidyverse)
library(stringr)
library(lubridate)
library(DT)
rm(list=ls())
fillColor = "#FFA07A"
fillColor2 = "#F1C40F"
AdverseFoodEvents = read_csv("CAERS_ASCII_2004_2017Q2.csv")
AdverseFoodEvents = AdverseFoodEvents %>%
rename(ReportNo = `RA_Report #`) %>%
rename(CreatedDate = `RA_CAERS Created Date`) %>%
rename(StartDate = `AEC_Event Start Date`) %>%
rename(ProductRole = `PRI_Product Role`) %>%
rename(ProductName = `PRI_Reported Brand/Product Name`) %>%
rename(IndustryName = `PRI_FDA Industry Name`) %>%
rename(AgeUnit = `CI_Age Unit`) %>%
rename(AgeAtAdverseEvent = `CI_Age at Adverse Event`) %>%
rename(Gender = `CI_Gender`) %>%
rename(Outcomes = `AEC_One Row Outcomes`) %>%
rename(Symptoms = `SYM_One Row Coded Symptoms`)
colnames(AdverseFoodEvents)
filter(AdverseFoodEvents$AgeAtAdverseEvent > 60)
old_vector <- AdverseFoodEvents[,8:162]
order(old_vector)
old_vector <- order(AdverseFoodEvents[,8:162])
old_vector <- AdverseFoodEvents[symptom,8:162]
gapminder %>%
filter(Gender == "female")
library(gapminder)
gapminder %>%
filter(Gender == "female")
gapminder %>%
filter(CI_Gender == "female")
AdverseFoodEvents %>%
group_by(Gender) %>%
filter(!is.na(Gender)) %>%
summarise(Count = n()) %>%
arrange(desc(Count)) %>%
ungroup() %>%
mutate(Gender = reorder(Gender,Count)) %>%
head(10) %>%
ggplot(aes(x = Gender,y = Count)) +
geom_bar(stat='identity',colour="white", fill = fillColor) +
geom_text(aes(x = Gender, y = 1, label = paste0("(",Count,")",sep="")),
hjust=0, vjust=.5, size = 4, colour = 'black',
fontface = 'bold') +
labs(x = 'Gender',
y = 'Count',
title = 'Gender and Count') +
coord_flip() +
theme_bw()
AdverseFoodEvents %>%
group_by(Gender) %>%
filter(!is.na(Gender)) %>%
summarise(Count = n()) %>%
arrange(desc(Count)) %>%
ungroup() %>%
mutate(Gender = reorder(Gender,Count)) %>%
head(10) %>%
ggplot(aes(x = Gender,y = Count)) +
geom_bar(stat='identity',colour="white", fill = "purple") +
geom_text(aes(x = Gender, y = 1, label = paste0("(",Count,")",sep="")),
hjust=0, vjust=.5, size = 4, colour = 'black',
fontface = 'bold') +
labs(x = 'Gender',
y = 'Count',
title = 'Gender and Count') +
coord_flip() +
theme_bw()
AdverseFoodEvents %>%
group_by(Gender) %>%
filter(!is.na(Gender)) %>%
summarise(Count = n()) %>%
arrange(desc(Count)) %>%
ungroup() %>%
mutate(Gender = reorder(Gender,Count)) %>%
head(10) %>%
ggplot(aes(x = Gender,y = Count)) +
geom_bar(stat='identity',colour="white", fill = "lightpurple") +
geom_text(aes(x = Gender, y = 1, label = paste0("(",Count,")",sep="")),
hjust=0, vjust=.5, size = 4, colour = 'black',
fontface = 'bold') +
labs(x = 'Gender',
y = 'Count',
title = 'Gender and Count') +
coord_flip() +
theme_bw()
AdverseFoodEvents %>%
group_by(Gender) %>%
filter(!is.na(Gender)) %>%
summarise(Count = n()) %>%
arrange(desc(Count)) %>%
ungroup() %>%
mutate(Gender = reorder(Gender,Count)) %>%
head(10) %>%
ggplot(aes(x = Gender,y = Count)) +
geom_bar(stat='identity',colour="white", fill = "redpurple") +
geom_text(aes(x = Gender, y = 1, label = paste0("(",Count,")",sep="")),
hjust=0, vjust=.5, size = 4, colour = 'black',
fontface = 'bold') +
labs(x = 'Gender',
y = 'Count',
title = 'Gender and Count') +
coord_flip() +
theme_bw()
AdverseFoodEvents %>%
group_by(Gender) %>%
filter(!is.na(Gender)) %>%
summarise(Count = n()) %>%
arrange(desc(Count)) %>%
ungroup() %>%
mutate(Gender = reorder(Gender,Count)) %>%
head(10) %>%
ggplot(aes(x = Gender,y = Count)) +
geom_bar(stat='identity',colour="white", fill = "purple") +
geom_text(aes(x = Gender, y = 1, label = paste0("(",Count,")",sep="")),
hjust=0, vjust=.5, size = 4, colour = 'black',
fontface = 'bold') +
labs(x = 'Gender',
y = 'Count',
title = 'Gender and Count') +
coord_flip() +
theme_bw()
AdverseFoodEvents %>%
group_by(Gender) %>%
filter(!is.na(Gender)) %>%
summarise(Count = n()) %>%
arrange(desc(Count)) %>%
ungroup() %>%
mutate(Gender = reorder(Gender,Count)) %>%
head(10) %>%
ggplot(aes(x = Gender,y = Count)) +
geom_bar(stat='identity',colour="white", fill = "morchid") +
geom_text(aes(x = Gender, y = 1, label = paste0("(",Count,")",sep="")),
hjust=0, vjust=.5, size = 4, colour = 'black',
fontface = 'bold') +
labs(x = 'Gender',
y = 'Count',
title = 'Gender and Count') +
coord_flip() +
theme_bw()
AdverseFoodEvents %>%
group_by(Gender) %>%
filter(!is.na(Gender)) %>%
summarise(Count = n()) %>%
arrange(desc(Count)) %>%
ungroup() %>%
mutate(Gender = reorder(Gender,Count)) %>%
head(10) %>%
ggplot(aes(x = Gender,y = Count)) +
geom_bar(stat='identity',colour="white", fill = "mediummorchid") +
geom_text(aes(x = Gender, y = 1, label = paste0("(",Count,")",sep="")),
hjust=0, vjust=.5, size = 4, colour = 'black',
fontface = 'bold') +
labs(x = 'Gender',
y = 'Count',
title = 'Gender and Count') +
coord_flip() +
theme_bw()
AdverseFoodEvents %>%
group_by(Gender) %>%
filter(!is.na(Gender)) %>%
summarise(Count = n()) %>%
arrange(desc(Count)) %>%
ungroup() %>%
mutate(Gender = reorder(Gender,Count)) %>%
head(10) %>%
ggplot(aes(x = Gender,y = Count)) +
geom_bar(stat='identity',colour="white", fill = "plum") +
geom_text(aes(x = Gender, y = 1, label = paste0("(",Count,")",sep="")),
hjust=0, vjust=.5, size = 4, colour = 'black',
fontface = 'bold') +
labs(x = 'Gender',
y = 'Count',
title = 'Gender and Count') +
coord_flip() +
theme_bw()
ggplot(AdverseFoodEvents, x = AdverseFoodEvents$Symptoms, y = AdverseFoodEvents$ProductName ) + geom_bar()
ggplot(AdverseFoodEvents, x = AdverseFoodEvents$Symptoms, y = AdverseFoodEvents$ProductName ) + geom_bar()
ggplot(AdverseFoodEvents, x = AdverseFoodEvents$Gender, y = AdverseFoodEvents$ProductName ) + geom_bar()
library(ggplot2)
ggplot(AdverseFoodEvents, x = AdverseFoodEvents$Gender, y = AdverseFoodEvents$ProductName ) + geom_bar()
library(ggplot2)
ggplot(AdverseFoodEvents, x = Gender, y = AdverseFoodEvents$ProductName ) + geom_bar()
library(ggplot2)
ggplot(AdverseFoodEvents, x = Gender, y = ProductName ) + geom_bar()
library(ggplot2)
ggplot(AdverseFoodEvents, aex(x = Gender, y = ProductName) ) + geom_bar()
library(ggplot2)
ggplot(AdverseFoodEvents, aes(x = Gender, y = ProductName) ) + geom_bar()
library(ggplot2)
ggplot(AdverseFoodEvents, aes(x = Gender, y = Age) ) + geom_bar()
library(ggplot2)
ggplot(AdverseFoodEvents, aes(x = Gender, y = AgeAtAdverseEventInYears) ) + geom_bar()
par(mfrow = c(2,1))
AdverseFoodEvents %>%
group_by(ProductName) %>%
summarise(Count = n()) %>%
arrange(desc(Count)) %>%
ungroup() %>%
mutate(ProductName = reorder(ProductName,Count)) %>%
head(10) %>%
ggplot(aes(x = ProductName,y = Count)) +
geom_bar(stat='identity',colour="white", fill = fillColor) +
geom_text(aes(x = ProductName, y = 1, label = paste0("(",Count,")",sep="")),
hjust=0, vjust=.5, size = 4, colour = 'black',
fontface = 'bold') +
labs(x = 'Product',
y = 'Count',
title = 'Product and Count') +
coord_flip() +
theme_bw()
