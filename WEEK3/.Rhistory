}
docs.idf <- apply(as.matrix(docs.tdm), 1, idf)
docs.tfidf <- docs.tf * docs.idf
inspect(docs.tdm)
docs <- tm_map(docs, toSpace, "the")
toSpace <- content_transformer(function(x, pattern) {
return (gsub(pattern, " ", x))
}
)
docs <- tm_map(docs, toSpace, "the")
toSpace <- content_transformer(function(x, pattern) {
return (gsub(pattern, " ", x))
}
)
docs <- tm_map(docs.tdm, toSpace, "the")
inspect(docs.tdm)
docs.tf <- apply(as.matrix(docs.tdm), 2, function(doc) {doc / sum(doc)})
idf.function <- function(word_doc) { log2( (length(word_doc)+1) / nnzero(word_doc) ) }
docs.idf <- apply(docs.tdm, 1, idf.function)
docs.tfidf <- docs.tf * docs.idf
head(docs.tfidf)
docs.pca <- prcomp(docs.tfidf, scale = T)
query.tfidf <- function(q){
q.position <- which(rownames(docs.tfidf) %in% q)
q.tfidf <- docs.tfidf[q.position, ]
return (q.tfidf)
}
query.tfidf(c("animal", "human", "politicals"))
query.tfidf <- function(q){
q.position <- which(rownames(docs.tfidf) %in% q)
q.tfidf <- docs.tfidf[q.position, ]
return (q.tfidf)
}
query.tfidf(c("animal", "human", "snowball"))
query.tfidf <- function(q){
q.position <- which(rownames(docs.tfidf) %in% q)
q.tfidf <- docs.tfidf[q.position, ]
return (q.tfidf)
}
query.tfidf(c("animal", "human", "snowball","Napoleone"))
query.tfidf <- function(q){
q.position <- which(rownames(docs.tfidf) %in% q)
q.tfidf <- docs.tfidf[q.position, ]
return (q.tfidf)
}
query.tfidf(c("animal", "human", "snowball","Napoleon"))
query.tfidf <- function(q){
q.position <- which(rownames(docs.tfidf) %in% q)
q.tfidf <- docs.tfidf[q.position, ]
return (q.tfidf)
}
query.tfidf(c("Napoleon", "human", "snowball","Napoleon"))
query.tfidf <- function(q){
q.position <- which(rownames(docs.tfidf) %in% q)
q.tfidf <- docs.tfidf[q.position, ]
return (q.tfidf)
}
query.tfidf(c("animal", "human", "snowball","leader"))
query.tfidf <- function(q){
q.position <- which(rownames(docs.tfidf) %in% q)
q.tfidf <- docs.tfidf[q.position, ]
return (q.tfidf)
}
query.tfidf(c("animal", "human", "snowball","leader","Napoleon"))
query.tfidf <- function(q){
q.position <- which(rownames(docs.tfidf) %in% q)
q.tfidf <- docs.tfidf[q.position, ]
return (q.tfidf)
}
query.tfidf(c("animal", "human", "snowball","leader","Napoleon"))
query.tfidf <- function(q){
q.position <- which(rownames(docs.tfidf) %in% q)
q.tfidf <- docs.tfidf[q.position, ]
return (q.tfidf)
}
query.tfidf(c("animal", "human", "snowball","leader","Comrade"))
query.tfidf <- function(q){
q.position <- which(rownames(docs.tfidf) %in% q)
q.tfidf <- docs.tfidf[q.position, ]
return (q.tfidf)
}
query.tfidf(c("animal", "human", "snowball","Comrade"))
query.tfidf <- function(q){
q.position <- which(rownames(docs.tfidf) %in% q)
q.tfidf <- docs.tfidf[q.position, ]
return (q.tfidf)
}
query.tfidf(c("animal", "human", "snowball","love"))
query.tfidf <- function(q){
q.position <- which(rownames(docs.tfidf) %in% q)
q.tfidf <- docs.tfidf[q.position, ]
return (q.tfidf)
}
query.tfidf(c("animal", "human", "snowball","love", "peace"))
query.tfidf <- function(q){
q.position <- which(rownames(docs.tfidf) %in% q)
q.tfidf <- docs.tfidf[q.position, ]
return (q.tfidf)
}
query.tfidf(c("animal", "human", "snowball","fight", "peace"))
query.tfidf <- function(q){
q.position <- which(rownames(docs.tfidf) %in% q)
q.tfidf <- docs.tfidf[q.position, ]
return (q.tfidf)
}
query.tfidf(c("pig", "human", "snowball","fight", "peace"))
query.tfidf <- function(q){
q.position <- which(rownames(docs.tfidf) %in% q)
q.tfidf <- docs.tfidf[q.position, ]
return (q.tfidf)
}
query.tfidf(c("pig", "human", "snowball","fight", "leader"))
docs.pca <- prcomp(docs.tfidf, scale = T)
cos <- function(x, y){
return (x %*% y / sqrt(x %*% x * y %*% y))[1, 1]
}
# compare with first doc
docs.cos.sim <- apply(docs.tfidf, 2, cos, y = docs.tfidf[, 1])
docs.cos.sim
# compare with first doc
docs.cos.sim <- apply(docs.tfidf, 2, cos, y = docs.tfidf[, 10])
docs.cos.sim
# compare with first doc
docs.cos.sim <- apply(docs.tfidf, 2, cos, y = docs.tfidf[, 8])
docs.cos.sim
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs.df$word, docs.df$freq, scale=c(5,0.1), colors=brewer.pal(8, "Dark2"))
library(wordcloud)
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs.df$word, docs.df$freq, scale=c(5,0.1), colors=brewer.pal(8, "Dark2"))
library(wordcloud)
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs.df$word, docs.df$freq, scale=c(10,1), colors=brewer.pal(8, "Dark2"))
docs <- Corpus(VectorSource("data"))
```
```{r}
docs <- Corpus(VectorSource("data"))
docs <- tm_map(docs, toSpace, "-")
toSpace <- content_transformer(function(x, pattern) {
return (gsub(pattern, " ", x))
}
)
docs <- tm_map(docs, toSpace, "‘")
docs <- tm_map(docs, toSpace, "’")
docs <- tm_map(docs, toSpace, "•")
docs <- tm_map(docs, toSpace, "”")
docs <- tm_map(docs, toSpace, "“")
docs <- tm_map(docs, removePunctuation)
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, stripWhitespace)
docs <- tm_map(docs, to)
```{r}
docs <- Corpus(VectorSource("data"))
toSpace <- content_transformer(function(x, pattern) {
return (gsub(pattern, " ", x))
}
)
docs <- tm_map(docs, toSpace, "-")
docs <- tm_map(docs, toSpace, "’")
docs <- tm_map(docs, toSpace, "‘")
docs <- tm_map(docs, toSpace, "“")
docs <- tm_map(docs, toSpace, "•")
docs <- tm_map(docs, toSpace, "”")
docs <- tm_map(docs, removePunctuation)
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, stripWhitespace)
docs <- tm_map(docs, to)
docs <- tm_map(docs, a)
docs <- tm_map(docs, the)
library(wordcloud)
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs.df$word, docs.df$freq, scale=c(10,1), colors=brewer.pal(8, "Dark2"))
```
library(wordcloud)
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs.df$word, docs.df$freq, scale=c(10,1),min.freq=150,max.words=150 colors=brewer.pal(8, "Dark2"))
library(wordcloud)
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs.df$word, docs.df$freq, scale=c(10,1),min.freq=150,max.words=150, colors=brewer.pal(8, "Dark2"))
library(wordcloud)
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs.df$word, docs.df$freq, scale=c(10,1),min.freq=200,max.words=50, colors=brewer.pal(8, "Dark2"))
query.tfidf <- function(q){
q.position <- which(rownames(docs.tfidf) %in% q)
q.tfidf <- docs.tfidf[q.position, ]
return (q.tfidf)
}
query.tfidf(c("pig", "human", "snowball","fight", "leader", "naploeon"))
query.tfidf <- function(q){
q.position <- which(rownames(docs.tfidf) %in% q)
q.tfidf <- docs.tfidf[q.position, ]
return (q.tfidf)
}
query.tfidf(c("pig", "human", "snowball","fight", "leader", "napoleon"))
library(wordcloud)
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs.df$word, docs.df$freq, scale=c(10,1),min.freq=220,max.words=40, colors=brewer.pal(8, "Dark2"))
library(wordcloud)
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs.df$word, docs.df$freq, scale=c(10,1),min.freq=220,max.words=45, colors=brewer.pal(8, "Dark2"))
library(wordcloud)
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs.df$word, docs.df$freq, scale=c(10,1),min.freq=200,max.words=45, colors=brewer.pal(8, "Dark2"))
library(wordcloud)
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs.df$word, docs.df$freq, scale=c(10,1),min.freq=200,max.words=45, colors=brewer.pal(8, "Dark2"))
library(wordcloud)
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs.df$word, docs.df$freq, scale=c(10,1),min.freq=200,max.words=45, colors=brewer.pal(8, "Dark2"))
library(wordcloud)
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs.df$word, docs.df$freq, scale=c(10,1),min.freq=220,max.words=40, colors=brewer.pal(8, "Dark2"))
docs <- Corpus(VectorSource(data))
toSpace <- content_transformer(function(x, pattern) {
return (gsub(pattern, " ", x))
}
)
docs <- tm_map(docs, toSpace, "and")
docs <- tm_map(docs, toSpace, "the")
docs <- tm_map(docs, toSpace, "was")
docs <- tm_map(docs, toSpace, "were")
docs <- tm_map(docs, toSpace, "a")
docs <- tm_map(docs, toSpace, "an")
library(wordcloud)
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs.df$word, docs.df$freq, scale=c(10,1),min.freq=220,max.words=40, colors=brewer.pal(8, "Dark2"))
docs <- Corpus(VectorSource(data))
toSpace <- content_transformer(function(x, pattern) {
return (gsub(pattern, " ", x))
}
)
docs <- tm_map(docs, toSpace, "and")
docs <- tm_map(docs, toSpace, "the")
docs <- tm_map(docs, toSpace, "was")
docs <- tm_map(docs, toSpace, "were")
docs <- tm_map(docs, toSpace, "a")
docs <- tm_map(docs, toSpace, "an")
library(wordcloud)
f <- sort(rowSums(docs), decreasing = T)
docs <- Corpus(VectorSource(data))
toSpace <- content_transformer(function(x, pattern) {
return (gsub(pattern, " ", x))
}
)
docs <- tm_map(docs, toSpace, "and")
docs <- tm_map(docs, toSpace, "the")
docs <- tm_map(docs, toSpace, "was")
docs <- tm_map(docs, toSpace, "were")
docs <- tm_map(docs, toSpace, "a")
docs <- tm_map(docs, toSpace, "an")
library(wordcloud)
f <- sort(rowSums(docs), decreasing = T)
docs <- Corpus(VectorSource(data))
toSpace <- content_transformer(function(x, pattern) {
return (gsub(pattern, " ", x))
}
)
docs <- tm_map(docs, toSpace, "and")
docs <- tm_map(docs, toSpace, "the")
docs <- tm_map(docs, toSpace, "was")
docs <- tm_map(docs, toSpace, "were")
docs <- tm_map(docs, toSpace, "a")
docs <- tm_map(docs, toSpace, "an")
library(wordcloud)
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs$word, docs$freq, scale=c(10,1),min.freq=220,max.words=40, colors=brewer.pal(8, "Dark2"))
docs <- Corpus(VectorSource(docs.tfidf))
toSpace <- content_transformer(function(x, pattern) {
return (gsub(pattern, " ", x))
}
)
docs <- tm_map(docs, toSpace, "and")
docs <- tm_map(docs, toSpace, "the")
docs <- tm_map(docs, toSpace, "was")
docs <- tm_map(docs, toSpace, "were")
docs <- tm_map(docs, toSpace, "a")
docs <- tm_map(docs, toSpace, "an")
library(wordcloud)
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs$word, docs$freq, scale=c(10,1),min.freq=220,max.words=40, colors=brewer.pal(8, "Dark2"))
docs <- Corpus(VectorSource(docs.tfidf))
toSpace <- content_transformer(function(x, pattern) {
return (gsub(pattern, " ", x))
}
)
docs <- tm_map(docs, toSpace, "and")
docs <- tm_map(docs, toSpace, "the")
docs <- tm_map(docs, toSpace, "was")
docs <- tm_map(docs, toSpace, "were")
docs <- tm_map(docs, toSpace, "a")
docs <- tm_map(docs, toSpace, "an")
library(wordcloud)
f <- sort(rowSums(docs), decreasing = T)
docs <- Corpus(VectorSource(docs.tfidf))
toSpace <- content_transformer(function(x, pattern) {
return (gsub(pattern, " ", x))
}
)
docs <- tm_map(docs, toSpace, "and")
docs <- tm_map(docs, toSpace, "the")
docs <- tm_map(docs, toSpace, "was")
docs <- tm_map(docs, toSpace, "were")
docs <- tm_map(docs, toSpace, "a")
docs <- tm_map(docs, toSpace, "an")
library(wordcloud)
docs <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs$word, docs$freq, scale=c(10,1),min.freq=220,max.words=40, colors=brewer.pal(8, "Dark2"))
library(wordcloud)
f <- sort(rowSums(docstf), decreasing = T)
# compare with first doc
docs.cos.sim <- apply(docs.tfidf, 2, cos, y = docs.tfidf[, 10])
docs.cos.sim
library(wordcloud)
f <- sort(rowSums(docstf), decreasing = T)
# compare with first doc
docs.cos.sim <- apply(docs.tfidf, 2, cos, y = docs.tfidf[, 8])
docs.cos.sim
# compare with first doc
docs.cos.sim <- apply(docs.tfidf, 2, cos, y = docs.tfidf[, 1])
docs.cos.sim
cos <- function(x, y){
return (x %*% y / sqrt(x %*% x * y %*% y))[1, 1]
}
library(wordcloud)
f <- sort(rowSums(docstf), decreasing = T)
library(wordcloud)
f <- sort(rowSums(doc.tfidf), decreasing = T)
library(wordcloud)
wordcloud(docs$word, docs$freq, scale=c(10,1),min.freq=220,max.words=40, colors=brewer.pal(8, "Dark2"))
library(wordcloud)
wordcloud(docs$word, docs$freq, scale=c(10,1),min.freq=220,max.words=40, colors=brewer.pal(8, "Dark2"))
library(wordcloud)
wordcloud(docs$word, docs$freq, scale=c(10,1),min.freq=220,max.words=40, colors=brewer.pal(8, "Dark2"))
library(wordcloud)
wordcloud(docs$word, docs$freq, scale=c(10,1),min.freq=200,max.words=40, colors=brewer.pal(8, "Dark2"))
library(wordcloud)
wordcloud(docs$word, docs$freq, scale=c(10,1),min.freq=200,max.words=40, colors=brewer.pal(8, "Dark2"))
library(wordcloud)
wordcloud(docs$word, docs$freq, scale=c(10,1),min.freq=200,max.words=40, colors=brewer.pal(8, "Dark2"))
library(wordcloud)
wordcloud(docs$word, docs$freq, scale=c(10,1),min.freq=200,max.words=40, colors=brewer.pal(8, "Dark2"))
library(wordcloud)
wordcloud(docs$word, docs$freq, scale=c(10,1),min.freq=200,max.words=40, colors=brewer.pal(8, "Dark2"))
library(wordcloud)
wordcloud(docs$word, docs$freq, scale=c(10,1),min.freq=190,max.words=40, colors=brewer.pal(8, "Dark2"))
library(wordcloud)
wordcloud(docs$word, docs$freq, scale=c(10,1),min.freq=190,max.words=40, colors=brewer.pal(8, "Dark2"))
library(wordcloud)
wordcloud(docs$word, docs$freq, scale=c(10,5),min.freq=190,max.words=40, colors=brewer.pal(8, "Dark2"))
library(wordcloud)
wordcloud(docs$word, docs$freq, scale=c(10,1),min.freq=190,max.words=40, colors=brewer.pal(8, "Dark2"))
library(wordcloud)
wordcloud(docs$word, docs$freq, scale=c(15,1),min.freq=190,max.words=40, colors=brewer.pal(8, "Dark2"))
library(wordcloud)
wordcloud(docs$word, docs$freq, scale=c(20,1),min.freq=190,max.words=40, colors=brewer.pal(8, "Dark2"))
library(wordcloud)
wordcloud(docs$word, docs$freq, scale=c(20,1),min.freq=190,max.words=80, colors=brewer.pal(8, "Dark2"))
library(wordcloud)
wordcloud(docs$word, docs$freq, scale=c(20,1),min.freq=200,max.words=80, colors=brewer.pal(8, "Dark2"))
library(wordcloud)
wordcloud(docs$word, docs$freq, scale=c(20,1),min.freq=190,max.words=40, colors=brewer.pal(8, "Dark2"))
library(wordcloud)
wordcloud(docs$word, docs$freq, scale=c(20,1),min.freq=190,max.words=45, colors=brewer.pal(8, "Dark2"))
library(wordcloud)
wordcloud(docs$word, docs$freq, scale=c(20,5),min.freq=190,max.words=45, colors=brewer.pal(8, "Dark2"))
library(wordcloud)
wordcloud(docs$word, docs$freq, scale=c(20,0.1),min.freq=190,max.words=45, colors=brewer.pal(8, "Dark2"))
library(wordcloud)
wordcloud(docs$word, docs$freq, scale=c(20,0.1),min.freq=190,max.words=45, colors=brewer.pal(8, "Dark2"))
km <- kmeans(ind.coord2, 3)
plot(ind.coord2, col = km$cluster)
points(km$centers, col = 5:3, pch = 8, cex = 2)
kmeans.cluster <- kmeans(data, centers=6)
kmeans.cluster <- kmeans("data"", centers=6)
kmeans.cluster$withinss
kmeans.cluster <- kmeans("data", centers=6)
kmeans.cluster <- kmeans("data", centers=2)
kmeans.cluster <- kmeans("docs.tfidf", centers=2)
ind.coord2 <- docs.ind$coord[, 1:2]
wss <- c()
for (i in 1:10) { wss[i] <- kmeans(ind.coord2, i)$tot.withinss }
plot(wss, type = "b")
km <- kmeans(ind.coord2, 3)
plot(ind.coord2, col = km$cluster)
points(km$centers, col = 50:30, pch = 8, cex = 2)
km <- kmeans(ind.coord2, 3)
plot(ind.coord2, col = km$cluster)
points(km$centers, col = 10:30, pch = 8, cex = 2)
km <- kmeans(ind.coord2, 3)
plot(ind.coord2, col = km$cluster)
points(km$centers, col = 10:300, pch = 8, cex = 2)
km <- kmeans(ind.coord2, 3)
plot(ind.coord2, col = km$cluster)
points(km$centers, col = 100:300, pch = 8, cex = 2)
km <- kmeans(ind.coord2, 3)
plot(ind.coord2, col = km$cluster)
points(km$centers, col = 1:300, pch = 8, cex = 2)
km <- kmeans(ind.coord2, 3)
plot(ind.coord2, col = km$cluster)
points(km$centers, col = 1:50, pch = 8, cex = 2)
docs.pca <- prcomp(docs.tfidf, scale = T)
fviz_eig(docs.pca)
fviz_pca_ind(docs.pca, geom.ind = c("point"), col.ind = "cos2")
fviz_pca_var(docs.pca, col.var = "contrib")
fviz_pca_biplot(docs.pca, geom.ind = "point")
docs.eig <- get_eig(docs.pca)
docs.var <- get_pca_var(docs.pca)
docs.ind <- get_pca_ind(docs.pca)
ind.coord2 <- docs.ind$coord[, 1:2]
wss <- c()
for (i in 1:10) { wss[i] <- kmeans(ind.coord2, i)$tot.withinss }
plot(wss, type = "b")
library(wordcloud)
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs.df$word, docs.df$freq, scale=c(20,0.1),min.freq=190,max.words=45, colors=brewer.pal(8, "Dark2"))
library(wordcloud)
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs.df$word, docs.df$freq, scale=c(20,0.1),min.freq=190,max.words=45, colors=brewer.pal(8, "Dark2"))
data <- read.csv("data",  # 資料檔名
header=T,          # 資料中的第一列，作為欄位名稱
sep=",")           # 將逗號視為分隔符號來讀取資料
data <- read.csv("data",  # 資料檔名
header=T,          # 資料中的第一列，作為欄位名稱
sep=",")           # 將逗號視為分隔符號來讀取資料
library(readr)
data <- read.csv("data",  # 資料檔名
header=T,          # 資料中的第一列，作為欄位名稱
sep=",")           # 將逗號視為分隔符號來讀取資料
library(readr)
data <- read.csv("data",
header=T,
sep=",")
library(readr)
data <- read.csv("data")
library(readr)
d <- read.csv("data")
str(data)
